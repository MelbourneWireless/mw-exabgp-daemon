begin;

create user bgpd
	password :'BGPD_PASSWORD'; -- Grab password from psql vars
comment on role bgpd is
$$The bgpd user is used by the bgpd daemon to manage routes$$;

create user authenticator noinherit
	password :'AUTHENTICATOR_PASSWORD'; -- Grab password from psql vars
comment on role authenticator is
$$The authenticator user is used to pivot into other roles.

It should have no permissions itself$$;

create role anon;
comment on role anon is
$$The anon user should only be able to see/do what we expect an anonymous member of the public to be able to do$$;
grant anon to authenticator;

-- Create schema as a non-superuser
create role provisioner;
grant provisioner to current_user;
create schema v1 authorization provisioner;
set role provisioner;

grant usage on schema v1 to anon;

create table routes(
    peer_ip_src inet not null,
    subnet cidr not null,
    primary key (peer_ip_src, subnet),
    as_path bigint[] not null,
    bgp_nexthop inet,
    local_pref int
);
comment on table routes is
	'Advertised routes';
comment on column routes.peer_ip_src is
	'Peer this route advertisement came from';
comment on column routes.subnet is
	'Subnet/Route advertised';
comment on column routes.as_path is
	'AS Path declared by peer';
comment on column routes.bgp_nexthop is
	'Next BGP peer as declared by peer';
comment on column routes.local_pref is
	$$Peer's local preference for this route$$;
grant all on routes to bgpd;
grant select on routes to anon;

commit;
